Microchip MPLAB XC8 Compiler V1.45 ()

Linker command line:

--edf=C:\Program Files (x86)\Microchip\xc8\v1.45\dat\en_msgs.txt -cs \
  -h+dist/default/production\BombFinderV2.X.production.sym \
  --cmf=dist/default/production\BombFinderV2.X.production.cmf -z -Q18F4331 \
  -oC:\Users\krthu\AppData\Local\Temp\s6fc.2 \
  -Mdist/default/production/BombFinderV2.X.production.map -E1 -ver=XC8 \
  -ASTACK=0264h-02ffh -pstack=STACK -ACODE=00h-01FFFh -ACONST=00h-01FFFh \
  -ASMALLCONST=0300h-03FFhx29 -AMEDIUMCONST=0300h-01FFFh -ACOMRAM=01h-05Fh \
  -AABS1=00h-02FFh -ABIGRAM=01h-02FFh -ARAM=060h-0FFh,0100h-01FFhx2 \
  -ABANK0=060h-0FFh -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh \
  -ASFR=0F60h-0FFFh -preset_vec=00h,intcode=08h,intcodelo=018h,powerup,init \
  -pramtop=0300h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\krthu\AppData\Local\Temp\s6fc.obj \
  dist/default/production\BombFinderV2.X.production.obj 

Object code version is 3.11

Machine type is 18F4331

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\krthu\AppData\Local\Temp\s6fc.obj
                init                                 F6       F6        4        C       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\BombFinderV2.X.production.obj
                intcodelo                            18       18       DE        C       0
                intcode                               8        8        6        4       0
                temp                                 36       36        1        1       1
                smallconst                          300      300       50      180       0
                text32                             19AE     19AE       38      1A8       0
                intcode_body                       144C     144C       B2      1A8       0
                text29                             1B3A     1B3A        E      1A8       0
                text28                             1382     1382       CA      1A8       0
                text27                             1976     1976       38      1A8       0
                text26                             1786     1786       62      1A8       0
                text25                             19E6     19E6       36      1A8       0
                text24                             170C     170C       7A      1A8       0
                text23                             1692     1692       7A      1A8       0
                text22                             17E8     17E8       54      1A8       0
                text21                             183C     183C       44      1A8       0
                text20                             1A7A     1A7A       28      1A8       0
                text19                             1AEA     1AEA       22      1A8       0
                text18                              CE0      CE0      2A2      1A8       0
                text17                             1590     1590       86      1A8       0
                text16                              F82      F82      13E      1A8       0
                text15                             14FE     14FE       92      1A8       0
                text14                             11BC     11BC       F8      1A8       0
                text13                             1880     1880       42      1A8       0
                text12                             1616     1616       7C      1A8       0
                text11                             193A     193A       3C      1A8       0
                text10                             18FE     18FE       3C      1A8       0
                text9                               8E0      8E0      400      1A8       0
                text8                              10C0     10C0       FC      1A8       0
                text7                              1A4E     1A4E       2C      1A8       0
                text6                              18C2     18C2       3C      1A8       0
                text5                              1AC8     1AC8       22      1A8       0
                text4                              12B4     12B4       CE      1A8       0
                text3                              1A1C     1A1C       32      1A8       0
                text2                              1B0C     1B0C       1C      1A8       0
                text1                              1B28     1B28       12      1A8       0
                text0                               350      350      590      1A8       0
                cstackCOMRAM                          1        1       2B        1       1
                cstackBANK0                          60       60       9E       60       1
                cstackBANK1                         100      100       E5      100       1
                cstackBANK2                         200      200       64      200       1
                bssBANK1                            1E5      1E5       15      100       1
                bssCOMRAM                            2C       2C        A        1       1
                cinit                              1AA2     1AA2       26      1A8       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                intcodelo                            18       18       DE         0
                intcode                               8        8        6         0
                init                                 F6       F6        4         0
                reset_vec                             0        0        4         0
                text32                             19AE     19AE       38         0
                intcode_body                       144C     144C       B2         0
                text29                             1B3A     1B3A        E         0
                text28                             1382     1382       CA         0
                text27                             1976     1976       38         0
                text26                             1786     1786       62         0
                text25                             19E6     19E6       36         0
                text24                             170C     170C       7A         0
                text23                             1692     1692       7A         0
                text22                             17E8     17E8       54         0
                text21                             183C     183C       44         0
                text20                             1A7A     1A7A       28         0
                text19                             1AEA     1AEA       22         0
                text18                              CE0      CE0      2A2         0
                text17                             1590     1590       86         0
                text16                              F82      F82      13E         0
                text15                             14FE     14FE       92         0
                text14                             11BC     11BC       F8         0
                text13                             1880     1880       42         0
                text12                             1616     1616       7C         0
                text11                             193A     193A       3C         0
                text10                             18FE     18FE       3C         0
                text9                               8E0      8E0      400         0
                text8                              10C0     10C0       FC         0
                text7                              1A4E     1A4E       2C         0
                text6                              18C2     18C2       3C         0
                text5                              1AC8     1AC8       22         0
                text4                              12B4     12B4       CE         0
                text3                              1A1C     1A1C       32         0
                text2                              1B0C     1B0C       1C         0
                text1                              1B28     1B28       12         0
                text0                               350      350      590         0
                cinit                              1AA2     1AA2       26         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          300      300       50         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 36       36        1         1
                cstackCOMRAM                          1        1       2B         1
                bssCOMRAM                            2C       2C        A         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          60       60       9E         1

        CLASS   BANK1          
                cstackBANK1                         100      100       E5         1
                bssBANK1                            1E5      1E5       15         1

        CLASS   BANK2          
                cstackBANK2                         200      200       64         1

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  000036  000037         1       1  COMRAM  
                intcode                        000008  000006  00000E         4       0  CODE    
                intcodelo                      000018  0000E2  0000FA         C       0  CODE    
                cstackBANK0                    000060  00009E  0000FE        60       1  BANK0   
                cstackBANK1                    000100  0000FA  0001FA       100       1  BANK1   
                cstackBANK2                    000200  000064  000264       200       1  BANK2   
                smallconst                     000300  000050  000350       180       0  SMALLCON
                text0                          000350  0017F8  001B48       1A8       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000FE-0000FF                2
        BANK1            0001FA-0001FF                6
        BANK2            000264-0002FF               9C
        BIGRAM           000037-00005F               29
                         0000FE-0000FF                2
                         0001FA-0001FF                6
                         000264-0002FF               9C
        CODE             000004-000007                4
                         00000E-000017                A
                         0000FA-0002FF              206
                         001B48-001FFF              4B8
        COMRAM           000037-00005F               29
        CONST            000004-000007                4
                         00000E-000017                A
                         0000FA-0002FF              206
                         001B48-001FFF              4B8
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      001B48-001FFF              4B8
        RAM              0000FE-0000FF                2
                         0001FA-0001FF                6
                         000264-0002FF               9C
        SFR              000F60-000FFF               A0
        SMALLCONST       001B48-001FFF              100
        STACK            000264-0002FF               9C

                                  Symbol Table

?___awdiv                             cstackBANK0  000066
?___lwdiv                             cstackBANK0  000060
?___lwmod                             cstackBANK0  000067
?___wmul                              cstackBANK0  000060
?_grabLeftIR                          cstackBANK0  000060
?_grabRightIR                         cstackBANK0  000060
?_sprintf                             cstackBANK0  00006C
LCD_String@string                     cstackBANK0  000066
LCDout@number                         cstackBANK0  000063
ScanIR@DirectionMoveThreshold         cstackBANK0  0000AE
ScanIR@F3540                          bssCOMRAM    000030
ScanIR@SensorResult                   cstackBANK0  0000B0
ScanIR@buf                            cstackBANK0  000086
ScanIR@mL                             cstackBANK0  000081
ScanIR@mR                             cstackBANK0  000083
ScanWithRange@DirectionFoundThreshold cstackBANK0  0000C1
ScanWithRange@F3553                   bssCOMRAM    00002C
ScanWithRange@LeftFlag                cstackBANK0  0000C4
ScanWithRange@Move                    cstackBANK0  00008A
ScanWithRange@MoveTime                cstackBANK0  000088
ScanWithRange@MoveType                cstackBANK0  00008C
ScanWithRange@RFID_Read               cstackBANK0  00008E
ScanWithRange@RightFlag               cstackBANK0  0000CB
ScanWithRange@SensorResult            cstackBANK0  0000C7
ScanWithRange@TimeAboveThreshold      cstackBANK0  0000C6
ScanWithRange@buf                     cstackBANK0  000095
ScanWithRange@i                       cstackBANK0  0000BF
ScanWithRange@loops                   cstackBANK0  000086
ScanWithRange@mL                      cstackBANK0  000082
ScanWithRange@mR                      cstackBANK0  000084
ScanWithRange@n                       cstackBANK0  0000BD
ScanWithRange@power                   cstackBANK0  0000C3
SendLCD@Byte                          cstackBANK0  000065
SendLCD@type                          cstackBANK0  000064
SetLine@line                          cstackBANK0  000066
VerifySignal@Signal                   cstackBANK0  000060
VerifySignal@checksum                 cstackBANK0  00006A
VerifySignal@hexByte                  cstackBANK0  000068
VerifySignal@i                        cstackBANK0  00006B
_ANSEL0bits                           (abs)        000FB8
_BAUDCONbits                          (abs)        000FAA
_CAP1BUFH                             (abs)        000F69
_CAP1BUFL                             (abs)        000F68
_CAP1CON                              (abs)        000F63
_CAP2BUFH                             (abs)        000F67
_CAP2BUFL                             (abs)        000F66
_CAP2CON                              (abs)        000F62
_E_TOG                                text29       001B3A
_INTCONbits                           (abs)        000FF2
_IPR1bits                             (abs)        000F9F
_InterruptHandlerHigh                 intcode      000008
_InterruptHandlerLow                  intcodelo    000018
_LATAbits                             (abs)        000F89
_LATB                                 (abs)        000F8A
_LATCbits                             (abs)        000F8B
_LATDbits                             (abs)        000F8C
_LATEbits                             (abs)        000F8D
_LCD_String                           text26       001786
_LCDout                               text28       001382
_OSCCON                               (abs)        000FD3
_OSCCONbits                           (abs)        000FD3
_PDC0H                                (abs)        000F78
_PDC0L                                (abs)        000F79
_PDC1H                                (abs)        000F76
_PDC1L                                (abs)        000F77
_PIE1bits                             (abs)        000F9D
_PIR1bits                             (abs)        000F9E
_PTCON0                               (abs)        000F7F
_PTCON1                               (abs)        000F7E
_PTPERH                               (abs)        000F7A
_PTPERL                               (abs)        000F7B
_PWMCON0                              (abs)        000F6F
_PWMCON1                              (abs)        000F6E
_RCONbits                             (abs)        000FD0
_RCREG                                (abs)        000FAE
_RCSTAbits                            (abs)        000FAB
_RFID_Read                            bssBANK1     0001F9
_ReceivedString                       bssBANK1     0001E9
_SPBRG                                (abs)        000FAF
_SPBRGH                               (abs)        000FB0
_ScanIR                               text14       0011BC
_ScanWithRange                        text9        0008E0
_SendLCD                              text27       001976
_SetLine                              text25       0019E6
_T0CONbits                            (abs)        000FD5
_T5CON                                (abs)        000FB7
_TMR0H                                (abs)        000FD7
_TMR0L                                (abs)        000FD6
_TRISAbits                            (abs)        000F92
_TRISBbits                            (abs)        000F93
_TRISC                                (abs)        000F94
_TRISCbits                            (abs)        000F94
_TRISDbits                            (abs)        000F95
_TRISEbits                            (abs)        000F96
_TXREG                                (abs)        000FAD
_TXSTAbits                            (abs)        000FAC
_VerifySignal                         text8        0010C0
__CFG_LVP$OFF                         (abs)        000000
__CFG_MCLRE$OFF                       (abs)        000000
__CFG_OSC$IRCIO                       (abs)        000000
__CFG_WDTEN$OFF                       (abs)        000000
__HRAM                                (abs)        000000
__Habs1                               abs1         000000
__Hbank0                              bank0        000000
__Hbank1                              bank1        000000
__Hbank2                              bank2        000000
__Hbigbss                             bigbss       000000
__Hbigdata                            bigdata      000000
__Hbigram                             bigram       000000
__Hbss                                bss          000000
__HbssBANK1                           bssBANK1     000000
__HbssCOMRAM                          bssCOMRAM    000000
__Hcinit                              cinit        000000
__Hclrtext                            clrtext      000000
__Hcomram                             comram       000000
__Hconfig                             config       30000E
__Hconst                              const        000000
__HcstackBANK0                        cstackBANK0  000000
__HcstackBANK1                        cstackBANK1  000000
__HcstackBANK2                        cstackBANK2  000000
__HcstackCOMRAM                       cstackCOMRAM 000000
__Hdata                               data         000000
__Heeprom_data                        eeprom_data  000000
__Hfarbss                             farbss       000000
__Hfardata                            fardata      000000
__Hibigdata                           ibigdata     000000
__Hidata                              idata        000000
__Hidloc                              idloc        200008
__Hifardata                           ifardata     000000
__Hinit                               init         0000FA
__Hintcode                            intcode      00000E
__Hintcode_body                       intcode_body 000000
__Hintcodelo                          intcodelo    0000F6
__Hintentry                           intentry     000000
__Hintret                             intret       000000
__Hintsave_regs                       intsave_regs 000000
__Hirdata                             irdata       000000
__Hmediumconst                        mediumconst  000000
__HnvFARRAM                           nvFARRAM     000000
__Hnvbit                              nvbit        000000
__Hnvrram                             nvrram       000000
__Hparam                              rparam       000000
__Hpowerup                            powerup      0000F6
__Hram                                ram          000000
__Hramtop                             ramtop       000300
__Hrbit                               rbit         000000
__Hrbss                               rbss         000000
__Hrdata                              rdata        000000
__Hreset_vec                          reset_vec    000004
__Hrparam                             rparam       000000
__Hsfr                                sfr          000000
__Hsmallconst                         smallconst   000350
__Hspace_0                            (abs)        30000E
__Hspace_1                            (abs)        000264
__Hspace_2                            (abs)        000000
__Hstack                              stack        000000
__Hstruct                             struct       000000
__Htemp                               temp         000037
__Htext                               text         000000
__Htext0                              text0        000000
__Htext1                              text1        000000
__Htext10                             text10       000000
__Htext11                             text11       000000
__Htext12                             text12       000000
__Htext13                             text13       000000
__Htext14                             text14       000000
__Htext15                             text15       000000
__Htext16                             text16       000000
__Htext17                             text17       000000
__Htext18                             text18       000000
__Htext19                             text19       000000
__Htext2                              text2        000000
__Htext20                             text20       000000
__Htext21                             text21       000000
__Htext22                             text22       000000
__Htext23                             text23       000000
__Htext24                             text24       000000
__Htext25                             text25       000000
__Htext26                             text26       000000
__Htext27                             text27       000000
__Htext28                             text28       000000
__Htext29                             text29       000000
__Htext3                              text3        000000
__Htext32                             text32       000000
__Htext4                              text4        000000
__Htext5                              text5        000000
__Htext6                              text6        000000
__Htext7                              text7        000000
__Htext8                              text8        000000
__Htext9                              text9        000000
__LRAM                                (abs)        000001
__Labs1                               abs1         000000
__Lbank0                              bank0        000000
__Lbank1                              bank1        000000
__Lbank2                              bank2        000000
__Lbigbss                             bigbss       000000
__Lbigdata                            bigdata      000000
__Lbigram                             bigram       000000
__Lbss                                bss          000000
__LbssBANK1                           bssBANK1     000000
__LbssCOMRAM                          bssCOMRAM    000000
__Lcinit                              cinit        000000
__Lclrtext                            clrtext      000000
__Lcomram                             comram       000000
__Lconfig                             config       300000
__Lconst                              const        000000
__LcstackBANK0                        cstackBANK0  000000
__LcstackBANK1                        cstackBANK1  000000
__LcstackBANK2                        cstackBANK2  000000
__LcstackCOMRAM                       cstackCOMRAM 000000
__Ldata                               data         000000
__Leeprom_data                        eeprom_data  000000
__Lfarbss                             farbss       000000
__Lfardata                            fardata      000000
__Libigdata                           ibigdata     000000
__Lidata                              idata        000000
__Lidloc                              idloc        200000
__Lifardata                           ifardata     000000
__Linit                               init         0000F6
__Lintcode                            intcode      000008
__Lintcode_body                       intcode_body 000000
__Lintcodelo                          intcodelo    000018
__Lintentry                           intentry     000000
__Lintret                             intret       000000
__Lintsave_regs                       intsave_regs 000000
__Lirdata                             irdata       000000
__Lmediumconst                        mediumconst  000000
__LnvFARRAM                           nvFARRAM     000000
__Lnvbit                              nvbit        000000
__Lnvrram                             nvrram       000000
__Lparam                              rparam       000000
__Lpowerup                            powerup      0000F6
__Lram                                ram          000000
__Lramtop                             ramtop       000300
__Lrbit                               rbit         000000
__Lrbss                               rbss         000000
__Lrdata                              rdata        000000
__Lreset_vec                          reset_vec    000000
__Lrparam                             rparam       000000
__Lsfr                                sfr          000000
__Lsmallconst                         smallconst   000300
__Lspace_0                            (abs)        000000
__Lspace_1                            (abs)        000000
__Lspace_2                            (abs)        000000
__Lstack                              stack        000000
__Lstruct                             struct       000000
__Ltemp                               temp         000036
__Ltext                               text         000000
__Ltext0                              text0        000000
__Ltext1                              text1        000000
__Ltext10                             text10       000000
__Ltext11                             text11       000000
__Ltext12                             text12       000000
__Ltext13                             text13       000000
__Ltext14                             text14       000000
__Ltext15                             text15       000000
__Ltext16                             text16       000000
__Ltext17                             text17       000000
__Ltext18                             text18       000000
__Ltext19                             text19       000000
__Ltext2                              text2        000000
__Ltext20                             text20       000000
__Ltext21                             text21       000000
__Ltext22                             text22       000000
__Ltext23                             text23       000000
__Ltext24                             text24       000000
__Ltext25                             text25       000000
__Ltext26                             text26       000000
__Ltext27                             text27       000000
__Ltext28                             text28       000000
__Ltext29                             text29       000000
__Ltext3                              text3        000000
__Ltext32                             text32       000000
__Ltext4                              text4        000000
__Ltext5                              text5        000000
__Ltext6                              text6        000000
__Ltext7                              text7        000000
__Ltext8                              text8        000000
__Ltext9                              text9        000000
__S0                                  (abs)        30000E
__S1                                  (abs)        000264
__S2                                  (abs)        000000
___awdiv                              text17       001590
___awdiv@counter                      cstackBANK0  00006A
___awdiv@dividend                     cstackBANK0  000066
___awdiv@divisor                      cstackBANK0  000068
___awdiv@quotient                     cstackBANK0  00006C
___awdiv@sign                         cstackBANK0  00006B
___inthi_sp                           stack        000000
___intlo_sp                           stack        000000
___lwdiv                              text22       0017E8
___lwdiv@counter                      cstackBANK0  000064
___lwdiv@dividend                     cstackBANK0  000060
___lwdiv@divisor                      cstackBANK0  000062
___lwdiv@quotient                     cstackBANK0  000065
___lwmod                              text21       00183C
___lwmod@counter                      cstackBANK0  00006B
___lwmod@dividend                     cstackBANK0  000067
___lwmod@divisor                      cstackBANK0  000069
___param_bank                         (abs)        000000
___rparam_used                        (abs)        000001
___sp                                 stack        000000
___wmul                               text20       001A7A
___wmul@multiplicand                  cstackBANK0  000062
___wmul@multiplier                    cstackBANK0  000060
___wmul@product                       cstackBANK0  000064
__accesstop                           (abs)        000060
__activetblptr                        (abs)        000002
__end_of_E_TOG                        text29       001B48
__end_of_InterruptHandlerHigh         intcode_body 0014FE
__end_of_InterruptHandlerLow          intcodelo    0000F6
__end_of_LCD_String                   text26       0017E8
__end_of_LCDout                       text28       00144C
__end_of_ScanIR                       text14       0012B4
__end_of_ScanWithRange                text9        000CE0
__end_of_SendLCD                      text27       0019AE
__end_of_SetLine                      text25       001A1C
__end_of_VerifySignal                 text8        0011BC
__end_of___awdiv                      text17       001616
__end_of___lwdiv                      text22       00183C
__end_of___lwmod                      text21       001880
__end_of___wmul                       text20       001AA2
__end_of__initialization              cinit        001ABA
__end_of_delay_tenth_s                text13       0018C2
__end_of_dpowers                      smallconst   00030B
__end_of_enableSensor                 text7        001A7A
__end_of_fullSpeedAhead               text12       001692
__end_of_fullSpeedBack                text6        0018FE
__end_of_grabLeftIR                   text24       001786
__end_of_grabRightIR                  text23       00170C
__end_of_initIR                       text5        001AEA
__end_of_initLCD                      text4        001382
__end_of_initMotorPWM                 text3        001A4E
__end_of_initRFID                     text2        001B28
__end_of_initTimer                    text1        001B3A
__end_of_isdigit                      text19       001B0C
__end_of_main                         text0        0008E0
__end_of_setMotorPWM                  text16       0010C0
__end_of_sprintf                      text18       000F82
__end_of_stop                         text15       001590
__end_of_turnLeft                     text11       001976
__end_of_turnRight                    text10       00193A
__end_ofi2_delay_tenth_s              text32       0019E6
__initialization                      cinit        001AA2
__mediumconst                         mediumconst  000000
__pbssBANK1                           bssBANK1     0001E5
__pbssCOMRAM                          bssCOMRAM    00002C
__pcinit                              cinit        001AA2
__pcstackBANK0                        cstackBANK0  000060
__pcstackBANK1                        cstackBANK1  000100
__pcstackBANK2                        cstackBANK2  000200
__pcstackCOMRAM                       cstackCOMRAM 000001
__pintcode                            intcode      000008
__pintcode_body                       intcode_body 00144C
__pintcodelo                          intcodelo    000018
__psmallconst                         smallconst   000300
__ptext0                              text0        000350
__ptext1                              text1        001B28
__ptext10                             text10       0018FE
__ptext11                             text11       00193A
__ptext12                             text12       001616
__ptext13                             text13       001880
__ptext14                             text14       0011BC
__ptext15                             text15       0014FE
__ptext16                             text16       000F82
__ptext17                             text17       001590
__ptext18                             text18       000CE0
__ptext19                             text19       001AEA
__ptext2                              text2        001B0C
__ptext20                             text20       001A7A
__ptext21                             text21       00183C
__ptext22                             text22       0017E8
__ptext23                             text23       001692
__ptext24                             text24       00170C
__ptext25                             text25       0019E6
__ptext26                             text26       001786
__ptext27                             text27       001976
__ptext28                             text28       001382
__ptext29                             text29       001B3A
__ptext3                              text3        001A1C
__ptext32                             text32       0019AE
__ptext4                              text4        0012B4
__ptext5                              text5        001AC8
__ptext6                              text6        0018C2
__ptext7                              text7        001A4E
__ptext8                              text8        0010C0
__ptext9                              text9        0008E0
__ramtop                              ramtop       000300
__size_of_E_TOG                       (abs)        000000
__size_of_InterruptHandlerHigh        (abs)        000000
__size_of_InterruptHandlerLow         (abs)        000000
__size_of_LCD_String                  (abs)        000000
__size_of_LCDout                      (abs)        000000
__size_of_ScanIR                      (abs)        000000
__size_of_ScanWithRange               (abs)        000000
__size_of_SendLCD                     (abs)        000000
__size_of_SetLine                     (abs)        000000
__size_of_VerifySignal                (abs)        000000
__size_of___awdiv                     (abs)        000000
__size_of___lwdiv                     (abs)        000000
__size_of___lwmod                     (abs)        000000
__size_of___wmul                      (abs)        000000
__size_of_delay_tenth_s               (abs)        000000
__size_of_enableSensor                (abs)        000000
__size_of_fullSpeedAhead              (abs)        000000
__size_of_fullSpeedBack               (abs)        000000
__size_of_grabLeftIR                  (abs)        000000
__size_of_grabRightIR                 (abs)        000000
__size_of_initIR                      (abs)        000000
__size_of_initLCD                     (abs)        000000
__size_of_initMotorPWM                (abs)        000000
__size_of_initRFID                    (abs)        000000
__size_of_initTimer                   (abs)        000000
__size_of_isdigit                     (abs)        000000
__size_of_main                        (abs)        000000
__size_of_setMotorPWM                 (abs)        000000
__size_of_sprintf                     (abs)        000000
__size_of_stop                        (abs)        000000
__size_of_turnLeft                    (abs)        000000
__size_of_turnRight                   (abs)        000000
__size_ofi2_delay_tenth_s             (abs)        000000
__smallconst                          smallconst   000300
_delay_tenth_s                        text13       001880
_dpowers                              smallconst   000301
_enableSensor                         text7        001A4E
_fullSpeedAhead                       text12       001616
_fullSpeedBack                        text6        0018C2
_grabLeftIR                           text24       00170C
_grabRightIR                          text23       001692
_i                                    bssCOMRAM    000035
_initIR                               text5        001AC8
_initLCD                              text4        0012B4
_initMotorPWM                         text3        001A1C
_initRFID                             text2        001B0C
_initTimer                            text1        001B28
_isdigit                              text19       001AEA
_isdigit$1693                         cstackBANK0  000061
_main                                 text0        000350
_mode                                 bssCOMRAM    000034
_setMotorPWM                          text16       000F82
_sprintf                              text18       000CE0
_stop                                 text15       0014FE
_turnLeft                             text11       00193A
_turnRight                            text10       0018FE
btemp                                 temp         000036
delay_tenth_s@i                       cstackBANK0  000062
delay_tenth_s@tenth_seconds           cstackBANK0  000061
enableSensor@sensor                   cstackBANK0  000061
enableSensor@status                   cstackBANK0  000060
end_of_initialization                 cinit        001ABA
fullSpeedAhead@mL                     cstackBANK0  000077
fullSpeedAhead@mR                     cstackBANK0  000079
fullSpeedAhead@power                  cstackBANK0  00007B
fullSpeedBack@mL                      cstackBANK0  00007D
fullSpeedBack@mR                      cstackBANK0  00007F
fullSpeedBack@power                   cstackBANK0  000081
grabLeftIR@IR_signal                  cstackBANK0  000065
grabLeftIR@i                          cstackBANK0  000067
grabRightIR@IR_signal                 cstackBANK0  000065
grabRightIR@i                         cstackBANK0  000067
i2_delay_tenth_s                      text32       0019AE
i2delay_tenth_s@i                     cstackCOMRAM 000003
i2delay_tenth_s@tenth_seconds         cstackCOMRAM 000002
int$flags                             temp         000036
int_func                              intcode_body 00144C
intlevel0                             text         000000
intlevel1                             text         000000
intlevel2                             text         000000
intlevel3                             text         000000
isdigit@c                             cstackBANK0  000062
main@DirectionFound                   cstackBANK0  0000FC
main@F3557                            bssBANK1     0001E5
main@Message                          cstackBANK1  0001C8
main@Move                             cstackBANK1  0001D2
main@MoveTime                         cstackBANK1  000100
main@MoveType                         cstackBANK2  000200
main@ScanAngle                        cstackBANK0  0000F7
main@SensorResult                     cstackBANK0  0000F8
main@buf                              cstackBANK0  0000CF
main@i                                cstackBANK0  0000FD
main@mL                               cstackBANK1  0001D3
main@mR                               cstackBANK1  0001DC
setMotorPWM@PWMduty                   cstackBANK0  000075
setMotorPWM@m                         cstackBANK0  00006E
sprintf@ap                            cstackBANK0  000078
sprintf@c                             cstackBANK0  000080
sprintf@f                             cstackBANK0  00006E
sprintf@flag                          cstackBANK0  00007D
sprintf@prec                          cstackBANK0  00007A
sprintf@sp                            cstackBANK0  00006C
sprintf@val                           cstackBANK0  00007B
sprintf@width                         cstackBANK0  00007E
stackhi                               (abs)        0002FF
stacklo                               (abs)        000264
start                                 init         0000F6
start_initialization                  cinit        001AA2
stop@mL                               cstackBANK0  000077
stop@mR                               cstackBANK0  000079
turnLeft@mL                           cstackBANK0  00007D
turnLeft@mR                           cstackBANK0  00007F
turnLeft@power                        cstackBANK0  000081
turnRight@mL                          cstackBANK0  00007D
turnRight@mR                          cstackBANK0  00007F
turnRight@power                       cstackBANK0  000081
wtemp6                                temp         000037


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 51 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  MoveTime      200    0[BANK1 ] int [100]
  MoveType      100    0[BANK2 ] unsigned char [100]
  buf            40  111[BANK0 ] unsigned char [40]
  Message        10  200[BANK1 ] unsigned char [10]
  mR              9  220[BANK1 ] struct DC_motor
  mL              9  211[BANK1 ] struct DC_motor
  SensorResult    4  152[BANK0 ] unsigned int [2]
  Move            1  210[BANK1 ] unsigned char 
  i               1  157[BANK0 ] unsigned char 
  DirectionFou    1  156[BANK0 ] char 
  ScanAngle       1  151[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0      47     229     100
      Temps:          0       2       0       0
      Totals:         0      49     229     100
Total ram usage:      378 bytes
 Hardware stack levels required when called:    8
 This function calls:
		_LCD_String
		_ScanIR
		_ScanWithRange
		_SendLCD
		_SetLine
		_VerifySignal
		_delay_tenth_s
		_enableSensor
		_fullSpeedAhead
		_fullSpeedBack
		_grabLeftIR
		_grabRightIR
		_initIR
		_initLCD
		_initMotorPWM
		_initRFID
		_initTimer
		_sprintf
		_stop
		_turnLeft
		_turnRight
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _initTimer *****************
 Defined at:
		line 8 in file "Movement.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _initRFID *****************
 Defined at:
		line 5 in file "RFID_Reader.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _initMotorPWM *****************
 Defined at:
		line 4 in file "dc_motor.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _initLCD *****************
 Defined at:
		line 38 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       1       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_LCDout
		_SendLCD
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _initIR *****************
 Defined at:
		line 30 in file "IR_Reading.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _fullSpeedBack *****************
 Defined at:
		line 125 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2   29[BANK0 ] PTR struct DC_motor
		 -> main@mL(9), 
  mR              2   31[BANK0 ] PTR struct DC_motor
		 -> main@mR(9), 
  power           1   33[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       5       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_fullSpeedAhead
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _enableSensor *****************
 Defined at:
		line 106 in file "IR_Reading.c"
 Parameters:    Size  Location     Type
  sensor          1    wreg     unsigned char 
  status          1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  sensor          1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _VerifySignal *****************
 Defined at:
		line 55 in file "RFID_Reader.c"
 Parameters:    Size  Location     Type
  Signal          2    0[BANK0 ] PTR unsigned char 
		 -> ReceivedString(16), 
 Auto vars:     Size  Location     Type
  hexByte         2    8[BANK0 ] unsigned int 
  i               1   11[BANK0 ] unsigned char 
  checksum        1   10[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       4       0       0
      Temps:          0       6       0       0
      Totals:         0      12       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ScanWithRange *****************
 Defined at:
		line 98 in file "Movement.c"
 Parameters:    Size  Location     Type
  mL              2   34[BANK0 ] PTR struct DC_motor
		 -> main@mL(9), 
  mR              2   36[BANK0 ] PTR struct DC_motor
		 -> main@mR(9), 
  loops           2   38[BANK0 ] int 
  MoveTime        2   40[BANK0 ] PTR int 
		 -> main@MoveTime(200), 
  Move            2   42[BANK0 ] PTR unsigned char 
		 -> main@Move(1), 
  MoveType        2   44[BANK0 ] PTR unsigned char 
		 -> main@MoveType(100), 
  RFID_Read       2   46[BANK0 ] PTR unsigned char 
		 -> RFID_Read(1), 
 Auto vars:     Size  Location     Type
  buf            40   53[BANK0 ] unsigned char [40]
  SensorResult    4  103[BANK0 ] unsigned int [2]
  RightFlag       2  107[BANK0 ] unsigned int 
  LeftFlag        2  100[BANK0 ] unsigned int 
  DirectionFou    2   97[BANK0 ] const unsigned int 
  i               2   95[BANK0 ] unsigned int 
  n               2   93[BANK0 ] unsigned int 
  TimeAboveThr    1  102[BANK0 ] unsigned char 
  power           1   99[BANK0 ] const unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0      14       0       0
      Locals:         0      56       0       0
      Temps:          0       5       0       0
      Totals:         0      75       0       0
Total ram usage:       75 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_LCD_String
		_SendLCD
		_SetLine
		_delay_tenth_s
		_grabLeftIR
		_grabRightIR
		_sprintf
		_stop
		_turnLeft
		_turnRight
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _turnRight *****************
 Defined at:
		line 98 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2   29[BANK0 ] PTR struct DC_motor
		 -> main@mL(9), 
  mR              2   31[BANK0 ] PTR struct DC_motor
		 -> main@mR(9), 
  power           1   33[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       5       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_fullSpeedAhead
 This function is called by:
		_ScanWithRange
		_main
 This function uses a non-reentrant model


 *************** function _turnLeft *****************
 Defined at:
		line 87 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2   29[BANK0 ] PTR struct DC_motor
		 -> main@mL(9), 
  mR              2   31[BANK0 ] PTR struct DC_motor
		 -> main@mR(9), 
  power           1   33[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       5       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_fullSpeedAhead
 This function is called by:
		_ScanWithRange
		_main
 This function uses a non-reentrant model


 *************** function _fullSpeedAhead *****************
 Defined at:
		line 108 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2   23[BANK0 ] PTR struct DC_motor
		 -> main@mL(9), 
  mR              2   25[BANK0 ] PTR struct DC_motor
		 -> main@mR(9), 
  power           1   27[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       5       0       0
      Locals:         0       0       0       0
      Temps:          0       1       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_setMotorPWM
 This function is called by:
		_turnLeft
		_turnRight
		_fullSpeedBack
		_main
 This function uses a non-reentrant model


 *************** function _delay_tenth_s *****************
 Defined at:
		line 32 in file "Movement.c"
 Parameters:    Size  Location     Type
  tenth_second    1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  tenth_second    1    1[BANK0 ] unsigned char 
  i               2    2[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       3       0       0
      Temps:          0       1       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_ScanWithRange
		_main
 This function uses a non-reentrant model


 *************** function _ScanIR *****************
 Defined at:
		line 44 in file "Movement.c"
 Parameters:    Size  Location     Type
  mL              2   33[BANK0 ] PTR struct DC_motor
		 -> main@mL(9), 
  mR              2   35[BANK0 ] PTR struct DC_motor
		 -> main@mR(9), 
 Auto vars:     Size  Location     Type
  buf            40   38[BANK0 ] unsigned char [40]
  SensorResult    4   80[BANK0 ] unsigned int [2]
  DirectionMov    2   78[BANK0 ] const unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0      46       0       0
      Temps:          0       1       0       0
      Totals:         0      51       0       0
Total ram usage:       51 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_LCD_String
		_SendLCD
		_SetLine
		_grabLeftIR
		_grabRightIR
		_sprintf
		_stop
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _stop *****************
 Defined at:
		line 67 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2   23[BANK0 ] PTR struct DC_motor
		 -> main@mL(9), 
  mR              2   25[BANK0 ] PTR struct DC_motor
		 -> main@mR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_setMotorPWM
 This function is called by:
		_ScanIR
		_ScanWithRange
		_main
 This function uses a non-reentrant model


 *************** function _setMotorPWM *****************
 Defined at:
		line 26 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  m               2   14[BANK0 ] PTR struct DC_motor
		 -> main@mR(9), main@mL(9), 
 Auto vars:     Size  Location     Type
  PWMduty         2   21[BANK0 ] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       2       0       0
      Temps:          0       5       0       0
      Totals:         0       9       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___awdiv
		___wmul
 This function is called by:
		_stop
		_fullSpeedAhead
		_setMotorFullSpeed
		_stopMotor
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2    6[BANK0 ] int 
  divisor         2    8[BANK0 ] int 
 Auto vars:     Size  Location     Type
  quotient        2   12[BANK0 ] int 
  sign            1   11[BANK0 ] unsigned char 
  counter         1   10[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    6[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       4       0       0
      Temps:          0       0       0       0
      Totals:         0       8       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_setMotorPWM
 This function uses a non-reentrant model


 *************** function _sprintf *****************
 Defined at:
		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 Parameters:    Size  Location     Type
  sp              2   12[BANK0 ] PTR unsigned char 
		 -> main@buf(40), ScanWithRange@buf(40), ScanIR@buf(40), 
  f               2   14[BANK0 ] PTR const unsigned char 
		 -> STR_6(17), STR_4(16), STR_2(16), 
 Auto vars:     Size  Location     Type
  tmpval          4    0        struct .
  cp              3    0        PTR const unsigned char 
  width           2   30[BANK0 ] int 
  val             2   27[BANK0 ] unsigned int 
  ap              2   24[BANK0 ] PTR void [1]
		 -> ?_sprintf(2), 
  len             2    0        unsigned int 
  c               1   32[BANK0 ] char 
  flag            1   29[BANK0 ] unsigned char 
  prec            1   26[BANK0 ] char 
 Return value:  Size  Location     Type
                  2   12[BANK0 ] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       8       0       0
      Locals:         0       9       0       0
      Temps:          0       4       0       0
      Totals:         0      21       0       0
Total ram usage:       21 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___lwdiv
		___lwmod
		___wmul
		_isdigit
 This function is called by:
		_ScanIR
		_ScanWithRange
		_main
 This function uses a non-reentrant model


 *************** function _isdigit *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1    2[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       2       0       0
      Temps:          0       1       0       0
      Totals:         0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2    0[BANK0 ] unsigned int 
  multiplicand    2    2[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  product         2    4[BANK0 ] unsigned int 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       2       0       0
      Temps:          0       0       0       0
      Totals:         0       6       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_setMotorPWM
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lwmod *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 Parameters:    Size  Location     Type
  dividend        2    7[BANK0 ] unsigned int 
  divisor         2    9[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  counter         1   11[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    7[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 Parameters:    Size  Location     Type
  dividend        2    0[BANK0 ] unsigned int 
  divisor         2    2[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2    5[BANK0 ] unsigned int 
  counter         1    4[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       3       0       0
      Temps:          0       0       0       0
      Totals:         0       7       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function _grabRightIR *****************
 Defined at:
		line 74 in file "IR_Reading.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  IR_signal       2    5[BANK0 ] unsigned int 
  i               1    7[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       3       0       0
      Temps:          0       3       0       0
      Totals:         0       8       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_ScanIR
		_ScanWithRange
		_main
 This function uses a non-reentrant model


 *************** function _grabLeftIR *****************
 Defined at:
		line 90 in file "IR_Reading.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  IR_signal       2    5[BANK0 ] unsigned int 
  i               1    7[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       3       0       0
      Temps:          0       3       0       0
      Totals:         0       8       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_ScanIR
		_ScanWithRange
		_main
 This function uses a non-reentrant model


 *************** function _SetLine *****************
 Defined at:
		line 74 in file "LCD.c"
 Parameters:    Size  Location     Type
  line            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  line            1    6[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       1       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_SendLCD
 This function is called by:
		_ScanIR
		_ScanWithRange
		_main
 This function uses a non-reentrant model


 *************** function _LCD_String *****************
 Defined at:
		line 83 in file "LCD.c"
 Parameters:    Size  Location     Type
  string          2    6[BANK0 ] PTR unsigned char 
		 -> STR_8(11), STR_7(10), main@buf(40), main@Message(10), 
		 -> STR_5(17), ScanWithRange@buf(40), STR_3(12), ScanIR@buf(40), 
		 -> STR_1(12), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       2       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_SendLCD
 This function is called by:
		_ScanIR
		_ScanWithRange
		_main
 This function uses a non-reentrant model


 *************** function _SendLCD *****************
 Defined at:
		line 27 in file "LCD.c"
 Parameters:    Size  Location     Type
  Byte            1    wreg     unsigned char 
  type            1    4[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  Byte            1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       1       0       0
      Locals:         0       1       0       0
      Temps:          0       0       0       0
      Totals:         0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCDout
 This function is called by:
		_initLCD
		_SetLine
		_LCD_String
		_ScanIR
		_ScanWithRange
		_main
 This function uses a non-reentrant model


 *************** function _LCDout *****************
 Defined at:
		line 14 in file "LCD.c"
 Parameters:    Size  Location     Type
  number          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  number          1    3[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       1       0       0
      Temps:          0       3       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_E_TOG
 This function is called by:
		_SendLCD
		_initLCD
 This function uses a non-reentrant model


 *************** function _E_TOG *****************
 Defined at:
		line 5 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_LCDout
 This function uses a non-reentrant model


 *************** function _InterruptHandlerLow *****************
 Defined at:
		line 18 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:         21       0       0       0
      Totals:        21       0       0       0
Total ram usage:       21 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _InterruptHandlerHigh *****************
 Defined at:
		line 34 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:         18       0       0       0
      Totals:        18       0       0       0
Total ram usage:       18 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i2_delay_tenth_s
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function i2_delay_tenth_s *****************
 Defined at:
		line 32 in file "Movement.c"
 Parameters:    Size  Location     Type
  tenth_second    1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  tenth_second    1    1[COMRAM] unsigned char 
  delay_tenth_    2    2[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          1       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_InterruptHandlerHigh
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c
		_sprintf       		CODE           	0CE0	0000	675

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c estimated size: 675

dc_motor.c
		_fullSpeedBack 		CODE           	18C2	0000	61
		_fullSpeedAhead		CODE           	1616	0000	125
		_turnLeft      		CODE           	193A	0000	61
		_stop          		CODE           	14FE	0000	147
		_turnRight     		CODE           	18FE	0000	61
		_initMotorPWM  		CODE           	1A1C	0000	51
		_setMotorPWM   		CODE           	0F82	0000	319

dc_motor.c estimated size: 825

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c
		___wmul        		CODE           	1A7A	0000	41

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c estimated size: 41

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c
		_isdigit       		CODE           	1AEA	0000	35

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c estimated size: 35

IR_Reading.c
		_grabLeftIR    		CODE           	170C	0000	123
		_grabRightIR   		CODE           	1692	0000	123
		_enableSensor  		CODE           	1A4E	0000	45
		_initIR        		CODE           	1AC8	0000	35

IR_Reading.c estimated size: 326

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c
		___lwmod       		CODE           	183C	0000	69

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c estimated size: 69

shared
		_dpowers       		SMALLCONST     	0301	0000	11
		i2_delay_tenth_s		CODE           	19AE	0000	57
		__initialization		CODE           	1AA2	0000	25

shared estimated size: 93

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c
		___lwdiv       		CODE           	17E8	0000	85

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c estimated size: 85

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c
		___awdiv       		CODE           	1590	0000	135

C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c estimated size: 135

RFID_Reader.c
		_VerifySignal  		CODE           	10C0	0000	253
		_initRFID      		CODE           	1B0C	0000	29

RFID_Reader.c estimated size: 282

main.c
		_main          		CODE           	0350	0000	1425
		_InterruptHandlerLow		CODE           	0018	0000	223
		_InterruptHandlerHigh		CODE           	0008	0000	185

main.c estimated size: 1833

Movement.c
		_ScanIR        		CODE           	11BC	0000	249
		_initTimer     		CODE           	1B28	0000	19
		_delay_tenth_s 		CODE           	1880	0000	67
		_ScanWithRange 		CODE           	08E0	0000	1025

Movement.c estimated size: 1360

LCD.c
		_SetLine       		CODE           	19E6	0000	55
		_LCD_String    		CODE           	1786	0000	99
		_SendLCD       		CODE           	1976	0000	57
		_E_TOG         		CODE           	1B3A	0000	15
		_LCDout        		CODE           	1382	0000	203
		_initLCD       		CODE           	12B4	0000	207

LCD.c estimated size: 636

