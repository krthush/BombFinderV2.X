Microchip MPLAB XC8 Compiler V1.35 ()

Linker command line:

--edf=C:\Program Files (x86)\Microchip\xc8\v1.35\dat\en_msgs.txt -cs \
  -h+dist/default/production\BombFinderV2.X.production.sym \
  --cmf=dist/default/production\BombFinderV2.X.production.cmf -z -Q18F4331 \
  -oC:\Users\tr514\AppData\Local\Temp\s25c.2 \
  -Mdist/default/production/BombFinderV2.X.production.map -E1 -ver=XC8 \
  -ASTACK=0212h-02ffh -pstack=STACK -ACODE=00h-01FFFh -ACONST=00h-01FFFh \
  -ASMALLCONST=0300h-03FFhx29 -AMEDIUMCONST=0300h-01FFFh -ACOMRAM=01h-05Fh \
  -AABS1=00h-02FFh -ABIGRAM=01h-02FFh -ARAM=060h-0FFh,0100h-01FFhx2 \
  -ABANK0=060h-0FFh -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh \
  -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo=018h,powerup,init,end_init \
  -pramtop=0300h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\tr514\AppData\Local\Temp\s25c.obj \
  dist/default/production\BombFinderV2.X.production.obj 

Object code version is 3.11

Machine type is 18F4331

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\tr514\AppData\Local\Temp\s25c.obj
                end_init                             D6       D6        4        C       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\BombFinderV2.X.production.obj
                intcodelo                            18       18       BE        C       0
                intcode                               8        8        E        4       0
                temp                                 3C       3C        1        1       1
                smallconst                          300      300       5C      180       0
                text31                             17F8     17F8       38      1AE       0
                intcode_body                       137A     137A       8A      1AE       0
                text28                             1994     1994        E      1AE       0
                text27                             10B0     10B0       C6      1AE       0
                text26                             1892     1892       30      1AE       0
                text25                             15EC     15EC       5E      1AE       0
                text24                             1862     1862       30      1AE       0
                text23                             157A     157A       72      1AE       0
                text22                             1508     1508       72      1AE       0
                text21                             16EE     16EE       52      1AE       0
                text20                             1740     1740       42      1AE       0
                text19                             1912     1912       26      1AE       0
                text18                             195A     195A       1E      1AE       0
                text17                              872      872      306      1AE       0
                text16                             1404     1404       84      1AE       0
                text15                              E7C      E7C      13A      1AE       0
                text14                             12E6     12E6       94      1AE       0
                text13                              FB6      FB6       FA      1AE       0
                text12                             17C0     17C0       38      1AE       0
                text11                             1488     1488       80      1AE       0
                text10                             169C     169C       52      1AE       0
                text9                              164A     164A       52      1AE       0
                text8                               B78      B78      304      1AE       0
                text7                              1232     1232       B4      1AE       0
                text6                              18EC     18EC       26      1AE       0
                text5                              1782     1782       3E      1AE       0
                text4                              1938     1938       22      1AE       0
                text3                              1176     1176       BC      1AE       0
                text2                              1830     1830       32      1AE       0
                text1                              1978     1978       1C      1AE       0
                text0                               35C      35C      516      1AE       0
                cstackCOMRAM                          1        1       39        1       1
                cstackBANK0                          60       60       58       60       1
                cstackBANK1                         100      100       FA      100       1
                cstackBANK2                         200      200       12      200       1
                bssBANK1                            1FA      1FA        5      100       1
                bssBANK0                             B8       B8       18       60       1
                bssCOMRAM                            3A       3A        2        1       1
                cinit                              18C2     18C2       2A      1AE       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             D6       D6        4         0
                intcodelo                            18       18       BE         0
                intcode                               8        8        E         0
                reset_vec                             0        0        4         0
                text31                             17F8     17F8       38         0
                intcode_body                       137A     137A       8A         0
                text28                             1994     1994        E         0
                text27                             10B0     10B0       C6         0
                text26                             1892     1892       30         0
                text25                             15EC     15EC       5E         0
                text24                             1862     1862       30         0
                text23                             157A     157A       72         0
                text22                             1508     1508       72         0
                text21                             16EE     16EE       52         0
                text20                             1740     1740       42         0
                text19                             1912     1912       26         0
                text18                             195A     195A       1E         0
                text17                              872      872      306         0
                text16                             1404     1404       84         0
                text15                              E7C      E7C      13A         0
                text14                             12E6     12E6       94         0
                text13                              FB6      FB6       FA         0
                text12                             17C0     17C0       38         0
                text11                             1488     1488       80         0
                text10                             169C     169C       52         0
                text9                              164A     164A       52         0
                text8                               B78      B78      304         0
                text7                              1232     1232       B4         0
                text6                              18EC     18EC       26         0
                text5                              1782     1782       3E         0
                text4                              1938     1938       22         0
                text3                              1176     1176       BC         0
                text2                              1830     1830       32         0
                text1                              1978     1978       1C         0
                text0                               35C      35C      516         0
                cinit                              18C2     18C2       2A         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          300      300       5C         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 3C       3C        1         1
                cstackCOMRAM                          1        1       39         1
                bssCOMRAM                            3A       3A        2         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          
                cstackBANK0                          60       60       58         1
                bssBANK0                             B8       B8       18         1

        CLASS   BANK1          
                cstackBANK1                         100      100       FA         1
                bssBANK1                            1FA      1FA        5         1

        CLASS   BANK2          
                cstackBANK2                         200      200       12         1

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  00003C  00003D         1       1  COMRAM  
                intcode                        000008  00000E  000016         4       0  CODE    
                intcodelo                      000018  0000C2  0000DA         C       0  CODE    
                cstackBANK0                    000060  000070  0000D0        60       1  BANK0   
                cstackBANK1                    000100  0000FF  0001FF       100       1  BANK1   
                cstackBANK2                    000200  000012  000212       200       1  BANK2   
                smallconst                     000300  00005C  00035C       180       0  SMALLCON
                text0                          00035C  001646  0019A2       1AE       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0000D0-0000FF               30
        BANK1            0001FF-0001FF                1
        BANK2            000212-0002FF               EE
        BIGRAM           00003D-00005F               23
                         0000D0-0000FF               30
                         0001FF-0001FF                1
                         000212-0002FF               EE
        CODE             000004-000007                4
                         000016-000017                2
                         0000DA-0002FF              226
                         0019A2-001FFF              65E
        COMRAM           00003D-00005F               23
        CONST            000004-000007                4
                         000016-000017                2
                         0000DA-0002FF              226
                         0019A2-001FFF              65E
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      0019A2-001FFF              65E
        RAM              0000D0-0000FF               30
                         0001FF-0001FF                1
                         000212-0002FF               EE
        SFR              000F60-000FFF               A0
        SMALLCONST       0019A2-001FFF              100
        STACK            000212-0002FF               EE

                                  Symbol Table

?___awdiv                             cstackCOMRAM 00002A
?___lwdiv                             cstackCOMRAM 000024
?___lwmod                             cstackCOMRAM 00002B
?___wmul                              cstackCOMRAM 000024
?_grabLeftIR                          cstackCOMRAM 000024
?_grabRightIR                         cstackCOMRAM 000024
?_sprintf                             cstackCOMRAM 000030
LCD_String@string                     cstackCOMRAM 00002A
LCDout@number                         cstackCOMRAM 000027
ScanIR@DirectionMoveThreshold         cstackBANK0  0000A0
ScanIR@F3882                          bssBANK0     0000B8
ScanIR@Move                           cstackBANK0  000072
ScanIR@MoveTime                       cstackBANK0  000074
ScanIR@MoveType                       cstackBANK0  000076
ScanIR@SensorResult                   cstackBANK0  0000A2
ScanIR@TurnDirection                  cstackBANK0  000071
ScanIR@buf                            cstackBANK0  000078
ScanIR@mL                             cstackBANK0  00006D
ScanIR@mR                             cstackBANK0  00006F
ScanWithRange@DirectionFoundThreshold cstackBANK0  0000A2
ScanWithRange@F3893                   bssBANK0     0000BC
ScanWithRange@FlagCounter             cstackBANK0  0000A4
ScanWithRange@LeftFlag                cstackBANK0  0000AB
ScanWithRange@MoveTimeEntry           cstackBANK0  000074
ScanWithRange@RightFlag               cstackBANK0  0000AC
ScanWithRange@SensorResult            cstackBANK0  0000A5
ScanWithRange@TurnDirection           cstackBANK0  000073
ScanWithRange@buf                     cstackBANK0  000078
ScanWithRange@i                       cstackBANK0  0000A0
ScanWithRange@mL                      cstackBANK0  00006D
ScanWithRange@mR                      cstackBANK0  00006F
ScanWithRange@milliseconds            cstackBANK0  000071
ScanWithRange@n                       cstackBANK0  0000A9
SendLCD@Byte                          cstackCOMRAM 000029
SendLCD@type                          cstackCOMRAM 000028
SetLine@line                          cstackCOMRAM 00002A
VerifySignal@Signal                   cstackCOMRAM 000024
VerifySignal@checksum                 cstackCOMRAM 00002C
VerifySignal@hexByte                  cstackCOMRAM 00002D
VerifySignal@i                        cstackCOMRAM 00002F
_ANSEL0bits                           (abs)        000FB8
_BAUDCONbits                          (abs)        000FAA
_CAP1BUFH                             (abs)        000F69
_CAP1BUFL                             (abs)        000F68
_CAP1CON                              (abs)        000F63
_CAP2BUFH                             (abs)        000F67
_CAP2BUFL                             (abs)        000F66
_CAP2CON                              (abs)        000F62
_E_TOG                                text28       001994
_INTCONbits                           (abs)        000FF2
_IPR1bits                             (abs)        000F9F
_InterruptHandlerHigh                 intcode      000008
_InterruptHandlerLow                  intcodelo    000018
_LATAbits                             (abs)        000F89
_LATB                                 (abs)        000F8A
_LATCbits                             (abs)        000F8B
_LATDbits                             (abs)        000F8C
_LATEbits                             (abs)        000F8D
_LCD_String                           text25       0015EC
_LCDout                               text27       0010B0
_OSCCON                               (abs)        000FD3
_OSCCONbits                           (abs)        000FD3
_PDC0H                                (abs)        000F78
_PDC0L                                (abs)        000F79
_PDC1H                                (abs)        000F76
_PDC1L                                (abs)        000F77
_PIE1bits                             (abs)        000F9D
_PIR1bits                             (abs)        000F9E
_PTCON0                               (abs)        000F7F
_PTCON1                               (abs)        000F7E
_PTPERH                               (abs)        000F7A
_PTPERL                               (abs)        000F7B
_PWMCON0                              (abs)        000F6F
_PWMCON1                              (abs)        000F6E
_RCONbits                             (abs)        000FD0
_RCREG                                (abs)        000FAE
_RCSTAbits                            (abs)        000FAB
_RFID_Read                            bssBANK1     0001FE
_ReceivedString                       bssBANK0     0000C0
_SPBRG                                (abs)        000FAF
_SPBRGH                               (abs)        000FB0
_ScanIR                               text13       000FB6
_ScanWithRange                        text8        000B78
_SendLCD                              text26       001892
_SetLine                              text24       001862
_T5CON                                (abs)        000FB7
_TRISAbits                            (abs)        000F92
_TRISBbits                            (abs)        000F93
_TRISC                                (abs)        000F94
_TRISCbits                            (abs)        000F94
_TRISDbits                            (abs)        000F95
_TRISEbits                            (abs)        000F96
_TXREG                                (abs)        000FAD
_TXSTAbits                            (abs)        000FAC
_VerifySignal                         text7        001232
__CFG_OSC$IRCIO                       (abs)        000000
__CFG_WDTEN$OFF                       (abs)        000000
__HRAM                                (abs)        000000
__Habs1                               abs1         000000
__Hbank0                              bank0        000000
__Hbank1                              bank1        000000
__Hbank2                              bank2        000000
__Hbigbss                             bigbss       000000
__Hbigdata                            bigdata      000000
__Hbigram                             bigram       000000
__Hbss                                bss          000000
__HbssBANK0                           bssBANK0     000000
__HbssBANK1                           bssBANK1     000000
__HbssCOMRAM                          bssCOMRAM    000000
__Hcinit                              cinit        000000
__Hclrtext                            clrtext      000000
__Hcomram                             comram       000000
__Hconfig                             config       30000E
__Hconst                              const        000000
__HcstackBANK0                        cstackBANK0  000000
__HcstackBANK1                        cstackBANK1  000000
__HcstackBANK2                        cstackBANK2  000000
__HcstackCOMRAM                       cstackCOMRAM 000000
__Hdata                               data         000000
__Heeprom_data                        eeprom_data  000000
__Hend_init                           end_init     0000DA
__Hfarbss                             farbss       000000
__Hfardata                            fardata      000000
__Hibigdata                           ibigdata     000000
__Hidata                              idata        000000
__Hidloc                              idloc        200008
__Hifardata                           ifardata     000000
__Hinit                               init         0000D6
__Hintcode                            intcode      000016
__Hintcode_body                       intcode_body 000000
__Hintcodelo                          intcodelo    0000D6
__Hintentry                           intentry     000000
__Hintret                             intret       000000
__Hintsave_regs                       intsave_regs 000000
__Hirdata                             irdata       000000
__Hmediumconst                        mediumconst  000000
__HnvFARRAM                           nvFARRAM     000000
__Hnvbit                              nvbit        000000
__Hnvrram                             nvrram       000000
__Hparam                              rparam       000000
__Hpowerup                            powerup      0000D6
__Hram                                ram          000000
__Hramtop                             ramtop       000300
__Hrbit                               rbit         000000
__Hrbss                               rbss         000000
__Hrdata                              rdata        000000
__Hreset_vec                          reset_vec    000004
__Hrparam                             rparam       000000
__Hsfr                                sfr          000000
__Hsmallconst                         smallconst   00035C
__Hspace_0                            (abs)        30000E
__Hspace_1                            (abs)        000212
__Hspace_2                            (abs)        000000
__Hstack                              stack        000000
__Hstruct                             struct       000000
__Htemp                               temp         00003D
__Htext                               text         000000
__Htext0                              text0        000000
__Htext1                              text1        000000
__Htext10                             text10       000000
__Htext11                             text11       000000
__Htext12                             text12       000000
__Htext13                             text13       000000
__Htext14                             text14       000000
__Htext15                             text15       000000
__Htext16                             text16       000000
__Htext17                             text17       000000
__Htext18                             text18       000000
__Htext19                             text19       000000
__Htext2                              text2        000000
__Htext20                             text20       000000
__Htext21                             text21       000000
__Htext22                             text22       000000
__Htext23                             text23       000000
__Htext24                             text24       000000
__Htext25                             text25       000000
__Htext26                             text26       000000
__Htext27                             text27       000000
__Htext28                             text28       000000
__Htext3                              text3        000000
__Htext31                             text31       000000
__Htext4                              text4        000000
__Htext5                              text5        000000
__Htext6                              text6        000000
__Htext7                              text7        000000
__Htext8                              text8        000000
__Htext9                              text9        000000
__LRAM                                (abs)        000001
__Labs1                               abs1         000000
__Lbank0                              bank0        000000
__Lbank1                              bank1        000000
__Lbank2                              bank2        000000
__Lbigbss                             bigbss       000000
__Lbigdata                            bigdata      000000
__Lbigram                             bigram       000000
__Lbss                                bss          000000
__LbssBANK0                           bssBANK0     000000
__LbssBANK1                           bssBANK1     000000
__LbssCOMRAM                          bssCOMRAM    000000
__Lcinit                              cinit        000000
__Lclrtext                            clrtext      000000
__Lcomram                             comram       000000
__Lconfig                             config       300000
__Lconst                              const        000000
__LcstackBANK0                        cstackBANK0  000000
__LcstackBANK1                        cstackBANK1  000000
__LcstackBANK2                        cstackBANK2  000000
__LcstackCOMRAM                       cstackCOMRAM 000000
__Ldata                               data         000000
__Leeprom_data                        eeprom_data  000000
__Lend_init                           end_init     0000D6
__Lfarbss                             farbss       000000
__Lfardata                            fardata      000000
__Libigdata                           ibigdata     000000
__Lidata                              idata        000000
__Lidloc                              idloc        200000
__Lifardata                           ifardata     000000
__Linit                               init         0000D6
__Lintcode                            intcode      000008
__Lintcode_body                       intcode_body 000000
__Lintcodelo                          intcodelo    000018
__Lintentry                           intentry     000000
__Lintret                             intret       000000
__Lintsave_regs                       intsave_regs 000000
__Lirdata                             irdata       000000
__Lmediumconst                        mediumconst  000000
__LnvFARRAM                           nvFARRAM     000000
__Lnvbit                              nvbit        000000
__Lnvrram                             nvrram       000000
__Lparam                              rparam       000000
__Lpowerup                            powerup      0000D6
__Lram                                ram          000000
__Lramtop                             ramtop       000300
__Lrbit                               rbit         000000
__Lrbss                               rbss         000000
__Lrdata                              rdata        000000
__Lreset_vec                          reset_vec    000000
__Lrparam                             rparam       000000
__Lsfr                                sfr          000000
__Lsmallconst                         smallconst   000300
__Lspace_0                            (abs)        000000
__Lspace_1                            (abs)        000000
__Lspace_2                            (abs)        000000
__Lstack                              stack        000000
__Lstruct                             struct       000000
__Ltemp                               temp         00003C
__Ltext                               text         000000
__Ltext0                              text0        000000
__Ltext1                              text1        000000
__Ltext10                             text10       000000
__Ltext11                             text11       000000
__Ltext12                             text12       000000
__Ltext13                             text13       000000
__Ltext14                             text14       000000
__Ltext15                             text15       000000
__Ltext16                             text16       000000
__Ltext17                             text17       000000
__Ltext18                             text18       000000
__Ltext19                             text19       000000
__Ltext2                              text2        000000
__Ltext20                             text20       000000
__Ltext21                             text21       000000
__Ltext22                             text22       000000
__Ltext23                             text23       000000
__Ltext24                             text24       000000
__Ltext25                             text25       000000
__Ltext26                             text26       000000
__Ltext27                             text27       000000
__Ltext28                             text28       000000
__Ltext3                              text3        000000
__Ltext31                             text31       000000
__Ltext4                              text4        000000
__Ltext5                              text5        000000
__Ltext6                              text6        000000
__Ltext7                              text7        000000
__Ltext8                              text8        000000
__Ltext9                              text9        000000
__S0                                  (abs)        30000E
__S1                                  (abs)        000212
__S2                                  (abs)        000000
___awdiv                              text16       001404
___awdiv@counter                      cstackCOMRAM 00002E
___awdiv@dividend                     cstackCOMRAM 00002A
___awdiv@divisor                      cstackCOMRAM 00002C
___awdiv@quotient                     cstackCOMRAM 000030
___awdiv@sign                         cstackCOMRAM 00002F
___inthi_sp                           stack        000000
___intlo_sp                           stack        000000
___lwdiv                              text21       0016EE
___lwdiv@counter                      cstackCOMRAM 00002A
___lwdiv@dividend                     cstackCOMRAM 000024
___lwdiv@divisor                      cstackCOMRAM 000026
___lwdiv@quotient                     cstackCOMRAM 000028
___lwmod                              text20       001740
___lwmod@counter                      cstackCOMRAM 00002F
___lwmod@dividend                     cstackCOMRAM 00002B
___lwmod@divisor                      cstackCOMRAM 00002D
___param_bank                         (abs)        000010
___rparam_used                        (abs)        000001
___sp                                 stack        000000
___wmul                               text19       001912
___wmul@multiplicand                  cstackCOMRAM 000026
___wmul@multiplier                    cstackCOMRAM 000024
___wmul@product                       cstackCOMRAM 000028
__accesstop                           (abs)        000060
__activetblptr                        (abs)        000002
__end_of_E_TOG                        text28       0019A2
__end_of_InterruptHandlerHigh         intcode_body 001404
__end_of_InterruptHandlerLow          intcodelo    0000D6
__end_of_LCD_String                   text25       00164A
__end_of_LCDout                       text27       001176
__end_of_ScanIR                       text13       0010B0
__end_of_ScanWithRange                text8        000E7C
__end_of_SendLCD                      text26       0018C2
__end_of_SetLine                      text24       001892
__end_of_VerifySignal                 text7        0012E6
__end_of___awdiv                      text16       001488
__end_of___lwdiv                      text21       001740
__end_of___lwmod                      text20       001782
__end_of___wmul                       text19       001938
__end_of__initialization              cinit        0018DE
__end_of_delay_tenth_s                text12       0017F8
__end_of_dpowers                      smallconst   00030B
__end_of_enableSensor                 text6        001912
__end_of_fullSpeedAhead               text11       001508
__end_of_fullSpeedBack                text5        0017C0
__end_of_grabLeftIR                   text23       0015EC
__end_of_grabRightIR                  text22       00157A
__end_of_initIR                       text4        00195A
__end_of_initLCD                      text3        001232
__end_of_initMotorPWM                 text2        001862
__end_of_initRFID                     text1        001994
__end_of_isdigit                      text18       001978
__end_of_main                         text0        000872
__end_of_setMotorPWM                  text15       000FB6
__end_of_sprintf                      text17       000B78
__end_of_stop                         text14       00137A
__end_of_turnLeft                     text10       0016EE
__end_of_turnRight                    text9        00169C
__end_ofi2_delay_tenth_s              text31       001830
__initialization                      cinit        0018C2
__mediumconst                         mediumconst  000000
__pbssBANK0                           bssBANK0     0000B8
__pbssBANK1                           bssBANK1     0001FA
__pbssCOMRAM                          bssCOMRAM    00003A
__pcinit                              cinit        0018C2
__pcstackBANK0                        cstackBANK0  000060
__pcstackBANK1                        cstackBANK1  000100
__pcstackBANK2                        cstackBANK2  000200
__pcstackCOMRAM                       cstackCOMRAM 000001
__pintcode                            intcode      000008
__pintcode_body                       intcode_body 00137A
__pintcodelo                          intcodelo    000018
__psmallconst                         smallconst   000300
__ptext0                              text0        00035C
__ptext1                              text1        001978
__ptext10                             text10       00169C
__ptext11                             text11       001488
__ptext12                             text12       0017C0
__ptext13                             text13       000FB6
__ptext14                             text14       0012E6
__ptext15                             text15       000E7C
__ptext16                             text16       001404
__ptext17                             text17       000872
__ptext18                             text18       00195A
__ptext19                             text19       001912
__ptext2                              text2        001830
__ptext20                             text20       001740
__ptext21                             text21       0016EE
__ptext22                             text22       001508
__ptext23                             text23       00157A
__ptext24                             text24       001862
__ptext25                             text25       0015EC
__ptext26                             text26       001892
__ptext27                             text27       0010B0
__ptext28                             text28       001994
__ptext3                              text3        001176
__ptext31                             text31       0017F8
__ptext4                              text4        001938
__ptext5                              text5        001782
__ptext6                              text6        0018EC
__ptext7                              text7        001232
__ptext8                              text8        000B78
__ptext9                              text9        00164A
__ramtop                              ramtop       000300
__size_of_E_TOG                       (abs)        000000
__size_of_InterruptHandlerHigh        (abs)        000000
__size_of_InterruptHandlerLow         (abs)        000000
__size_of_LCD_String                  (abs)        000000
__size_of_LCDout                      (abs)        000000
__size_of_ScanIR                      (abs)        000000
__size_of_ScanWithRange               (abs)        000000
__size_of_SendLCD                     (abs)        000000
__size_of_SetLine                     (abs)        000000
__size_of_VerifySignal                (abs)        000000
__size_of___awdiv                     (abs)        000000
__size_of___lwdiv                     (abs)        000000
__size_of___lwmod                     (abs)        000000
__size_of___wmul                      (abs)        000000
__size_of_delay_tenth_s               (abs)        000000
__size_of_enableSensor                (abs)        000000
__size_of_fullSpeedAhead              (abs)        000000
__size_of_fullSpeedBack               (abs)        000000
__size_of_grabLeftIR                  (abs)        000000
__size_of_grabRightIR                 (abs)        000000
__size_of_initIR                      (abs)        000000
__size_of_initLCD                     (abs)        000000
__size_of_initMotorPWM                (abs)        000000
__size_of_initRFID                    (abs)        000000
__size_of_isdigit                     (abs)        000000
__size_of_main                        (abs)        000000
__size_of_setMotorPWM                 (abs)        000000
__size_of_sprintf                     (abs)        000000
__size_of_stop                        (abs)        000000
__size_of_turnLeft                    (abs)        000000
__size_of_turnRight                   (abs)        000000
__size_ofi2_delay_tenth_s             (abs)        000000
__smallconst                          smallconst   000300
_delay_tenth_s                        text12       0017C0
_dpowers                              smallconst   000301
_enableSensor                         text6        0018EC
_fullSpeedAhead                       text11       001488
_fullSpeedBack                        text5        001782
_grabLeftIR                           text23       00157A
_grabRightIR                          text22       001508
_i                                    bssCOMRAM    00003A
_initIR                               text4        001938
_initLCD                              text3        001176
_initMotorPWM                         text2        001830
_initRFID                             text1        001978
_isdigit                              text18       00195A
_isdigit$1878                         cstackCOMRAM 000025
_main                                 text0        00035C
_mode                                 bssCOMRAM    00003B
_setMotorPWM                          text15       000E7C
_sprintf                              text17       000872
_stop                                 text14       0012E6
_turnLeft                             text10       00169C
_turnRight                            text9        00164A
btemp                                 temp         00003C
delay_tenth_s@i                       cstackCOMRAM 000026
delay_tenth_s@tenth_seconds           cstackCOMRAM 000025
enableSensor@sensor                   cstackCOMRAM 000025
enableSensor@status                   cstackCOMRAM 000024
end_of_initialization                 cinit        0018DE
fullSpeedAhead@mL                     cstackBANK0  000062
fullSpeedAhead@mR                     cstackBANK0  000064
fullSpeedAhead@power                  cstackBANK0  000066
fullSpeedBack@mL                      cstackBANK0  000067
fullSpeedBack@mR                      cstackBANK0  000069
fullSpeedBack@power                   cstackBANK0  00006B
grabLeftIR@IR_signal                  cstackCOMRAM 000029
grabLeftIR@i                          cstackCOMRAM 00002B
grabRightIR@IR_signal                 cstackCOMRAM 000029
grabRightIR@i                         cstackCOMRAM 00002B
i2_delay_tenth_s                      text31       0017F8
i2delay_tenth_s@i                     cstackCOMRAM 000003
i2delay_tenth_s@tenth_seconds         cstackCOMRAM 000002
int$flags                             temp         00003C
int_func                              intcode_body 00137A
intlevel0                             text         000000
intlevel1                             text         000000
intlevel2                             text         000000
intlevel3                             text         000000
isdigit@c                             cstackCOMRAM 000026
main@DirectionFound                   cstackBANK0  0000B5
main@F3897                            bssBANK1     0001FA
main@Message                          cstackBANK1  0001F0
main@Move                             cstackBANK0  0000B6
main@MoveTime                         cstackBANK1  000100
main@MoveType                         cstackBANK1  000164
main@ScanAngle                        cstackBANK0  0000AF
main@SensorResult                     cstackBANK0  0000B0
main@TurnDirection                    cstackBANK0  0000B4
main@buf                              cstackBANK1  0001C8
main@i                                cstackBANK0  0000B7
main@mL                               cstackBANK2  000200
main@mR                               cstackBANK2  000209
setMotorPWM@PWMduty                   cstackBANK0  000060
setMotorPWM@m                         cstackCOMRAM 000032
sprintf@ap                            cstackBANK0  000064
sprintf@c                             cstackBANK0  00006C
sprintf@f                             cstackCOMRAM 000032
sprintf@flag                          cstackBANK0  000069
sprintf@prec                          cstackBANK0  000066
sprintf@sp                            cstackCOMRAM 000030
sprintf@val                           cstackBANK0  000067
sprintf@width                         cstackBANK0  00006A
stackhi                               (abs)        0002FF
stacklo                               (abs)        000212
start                                 init         0000D6
start_initialization                  cinit        0018C2
stop@mL                               cstackBANK0  000062
stop@mR                               cstackBANK0  000064
turnLeft@mL                           cstackBANK0  000067
turnLeft@mR                           cstackBANK0  000069
turnLeft@power                        cstackBANK0  00006B
turnRight@mL                          cstackBANK0  000067
turnRight@mR                          cstackBANK0  000069
turnRight@power                       cstackBANK0  00006B


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 51 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  MoveType      100  100[BANK1 ] unsigned char [100]
  MoveTime      100    0[BANK1 ] unsigned char [100]
  buf            40  200[BANK1 ] unsigned char [40]
  Message        10  240[BANK1 ] unsigned char [10]
  mR              9    9[BANK2 ] struct DC_motor
  mL              9    0[BANK2 ] struct DC_motor
  SensorResult    4   80[BANK0 ] unsigned int [2]
  i               1   87[BANK0 ] unsigned char 
  Move            1   86[BANK0 ] unsigned char 
  DirectionFou    1   85[BANK0 ] char 
  TurnDirectio    1   84[BANK0 ] unsigned char 
  ScanAngle       1   79[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       9     250      18
      Temps:          0       2       0       0
      Totals:         0      11     250      18
Total ram usage:      279 bytes
 Hardware stack levels required when called:    8
 This function calls:
		_LCD_String
		_ScanIR
		_ScanWithRange
		_SendLCD
		_SetLine
		_VerifySignal
		_delay_tenth_s
		_enableSensor
		_fullSpeedAhead
		_fullSpeedBack
		_grabLeftIR
		_grabRightIR
		_initIR
		_initLCD
		_initMotorPWM
		_initRFID
		_sprintf
		_stop
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _initRFID *****************
 Defined at:
		line 5 in file "RFID_Reader.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _initMotorPWM *****************
 Defined at:
		line 4 in file "dc_motor.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _initLCD *****************
 Defined at:
		line 38 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          1       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_LCDout
		_SendLCD
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _initIR *****************
 Defined at:
		line 30 in file "IR_Reading.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _fullSpeedBack *****************
 Defined at:
		line 125 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2    7[BANK0 ] PTR struct DC_motor
		 -> main@mL(9), 
  mR              2    9[BANK0 ] PTR struct DC_motor
		 -> main@mR(9), 
  power           1   11[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       5       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_fullSpeedAhead
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _enableSensor *****************
 Defined at:
		line 106 in file "IR_Reading.c"
 Parameters:    Size  Location     Type
  sensor          1    wreg     unsigned char 
  status          1   35[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  sensor          1   36[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _VerifySignal *****************
 Defined at:
		line 55 in file "RFID_Reader.c"
 Parameters:    Size  Location     Type
  Signal          2   35[COMRAM] PTR unsigned char 
		 -> ReceivedString(16), 
 Auto vars:     Size  Location     Type
  hexByte         2   44[COMRAM] unsigned int 
  i               1   46[COMRAM] unsigned char 
  checksum        1   43[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         4       0       0       0
      Temps:          6       0       0       0
      Totals:        12       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ScanWithRange *****************
 Defined at:
		line 77 in file "Movement.c"
 Parameters:    Size  Location     Type
  mL              2   13[BANK0 ] PTR struct DC_motor
		 -> main@mL(9), 
  mR              2   15[BANK0 ] PTR struct DC_motor
		 -> main@mR(9), 
  milliseconds    2   17[BANK0 ] int 
  TurnDirectio    1   19[BANK0 ] unsigned char 
  MoveTimeEntr    2   20[BANK0 ] PTR unsigned char 
		 -> main@MoveTime(100), 
 Auto vars:     Size  Location     Type
  buf            40   24[BANK0 ] unsigned char [40]
  SensorResult    4   69[BANK0 ] unsigned int [2]
  n               2   73[BANK0 ] unsigned int 
  DirectionFou    2   66[BANK0 ] const unsigned int 
  i               2   64[BANK0 ] unsigned int 
  RightFlag       1   76[BANK0 ] unsigned char 
  LeftFlag        1   75[BANK0 ] unsigned char 
  FlagCounter     1   68[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       9       0       0
      Locals:         0      53       0       0
      Temps:          0       2       0       0
      Totals:         0      64       0       0
Total ram usage:       64 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_LCD_String
		_SendLCD
		_SetLine
		_delay_tenth_s
		_grabLeftIR
		_grabRightIR
		_sprintf
		_stop
		_turnLeft
		_turnRight
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _turnRight *****************
 Defined at:
		line 87 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2    7[BANK0 ] PTR struct DC_motor
		 -> main@mL(9), 
  mR              2    9[BANK0 ] PTR struct DC_motor
		 -> main@mR(9), 
  power           1   11[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       5       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_fullSpeedAhead
		_stop
 This function is called by:
		_ScanWithRange
 This function uses a non-reentrant model


 *************** function _turnLeft *****************
 Defined at:
		line 98 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2    7[BANK0 ] PTR struct DC_motor
		 -> main@mL(9), 
  mR              2    9[BANK0 ] PTR struct DC_motor
		 -> main@mR(9), 
  power           1   11[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       5       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       5       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_fullSpeedAhead
		_stop
 This function is called by:
		_ScanWithRange
 This function uses a non-reentrant model


 *************** function _fullSpeedAhead *****************
 Defined at:
		line 108 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2    2[BANK0 ] PTR struct DC_motor
		 -> main@mL(9), 
  mR              2    4[BANK0 ] PTR struct DC_motor
		 -> main@mR(9), 
  power           1    6[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       5       0       0
      Locals:         0       0       0       0
      Temps:          1       0       0       0
      Totals:         1       5       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_setMotorPWM
 This function is called by:
		_turnRight
		_turnLeft
		_fullSpeedBack
		_main
 This function uses a non-reentrant model


 *************** function _delay_tenth_s *****************
 Defined at:
		line 21 in file "Movement.c"
 Parameters:    Size  Location     Type
  tenth_second    1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  tenth_second    1   36[COMRAM] unsigned char 
  i               2   37[COMRAM] unsigned int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          1       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_ScanWithRange
		_main
 This function uses a non-reentrant model


 *************** function _ScanIR *****************
 Defined at:
		line 34 in file "Movement.c"
 Parameters:    Size  Location     Type
  mL              2   13[BANK0 ] PTR struct DC_motor
		 -> main@mL(9), 
  mR              2   15[BANK0 ] PTR struct DC_motor
		 -> main@mR(9), 
  TurnDirectio    1   17[BANK0 ] unsigned char 
  Move            2   18[BANK0 ] PTR unsigned char 
		 -> main@Move(1), 
  MoveTime        2   20[BANK0 ] PTR unsigned char 
		 -> main@MoveTime(100), 
  MoveType        2   22[BANK0 ] PTR unsigned char 
		 -> main@MoveType(100), 
 Auto vars:     Size  Location     Type
  buf            40   24[BANK0 ] unsigned char [40]
  SensorResult    4   66[BANK0 ] unsigned int [2]
  DirectionMov    2   64[BANK0 ] const unsigned int 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0      11       0       0
      Locals:         0      46       0       0
      Temps:          1       0       0       0
      Totals:         1      57       0       0
Total ram usage:       58 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_LCD_String
		_SendLCD
		_SetLine
		_grabLeftIR
		_grabRightIR
		_sprintf
		_stop
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _stop *****************
 Defined at:
		line 67 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  mL              2    2[BANK0 ] PTR struct DC_motor
		 -> main@mL(9), 
  mR              2    4[BANK0 ] PTR struct DC_motor
		 -> main@mR(9), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       4       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_setMotorPWM
 This function is called by:
		_turnRight
		_turnLeft
		_ScanIR
		_ScanWithRange
		_main
 This function uses a non-reentrant model


 *************** function _setMotorPWM *****************
 Defined at:
		line 26 in file "dc_motor.c"
 Parameters:    Size  Location     Type
  m               2   49[COMRAM] PTR struct DC_motor
		 -> main@mR(9), main@mL(9), 
 Auto vars:     Size  Location     Type
  PWMduty         2    0[BANK0 ] int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       2       0       0
      Temps:          5       0       0       0
      Totals:         7       2       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___awdiv
		___wmul
 This function is called by:
		_stop
		_fullSpeedAhead
		_setMotorFullSpeed
		_stopMotor
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2   41[COMRAM] int 
  divisor         2   43[COMRAM] int 
 Auto vars:     Size  Location     Type
  quotient        2   47[COMRAM] int 
  sign            1   46[COMRAM] unsigned char 
  counter         1   45[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   41[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         4       0       0       0
      Temps:          0       0       0       0
      Totals:         8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_setMotorPWM
 This function uses a non-reentrant model


 *************** function _sprintf *****************
 Defined at:
		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c"
 Parameters:    Size  Location     Type
  sp              2   47[COMRAM] PTR unsigned char 
		 -> main@buf(40), ScanWithRange@buf(40), ScanIR@buf(40), 
  f               2   49[COMRAM] PTR const unsigned char 
		 -> STR_6(17), STR_4(16), STR_2(16), 
 Auto vars:     Size  Location     Type
  tmpval          4    0        struct .
  cp              3    0        PTR const unsigned char 
  width           2   10[BANK0 ] int 
  val             2    7[BANK0 ] unsigned int 
  ap              2    4[BANK0 ] PTR void [1]
		 -> ?_sprintf(2), 
  len             2    0        unsigned int 
  c               1   12[BANK0 ] char 
  flag            1    9[BANK0 ] unsigned char 
  prec            1    6[BANK0 ] char 
 Return value:  Size  Location     Type
                  2   47[COMRAM] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         8       0       0       0
      Locals:         0       9       0       0
      Temps:          0       4       0       0
      Totals:         8      13       0       0
Total ram usage:       21 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___lwdiv
		___lwmod
		___wmul
		_isdigit
 This function is called by:
		_ScanIR
		_ScanWithRange
		_main
 This function uses a non-reentrant model


 *************** function _isdigit *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c"
 Parameters:    Size  Location     Type
  c               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  c               1   37[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         2       0       0       0
      Temps:          1       0       0       0
      Totals:         3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___wmul *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 Parameters:    Size  Location     Type
  multiplier      2   35[COMRAM] unsigned int 
  multiplicand    2   37[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  product         2   39[COMRAM] unsigned int 
 Return value:  Size  Location     Type
                  2   35[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         2       0       0       0
      Temps:          0       0       0       0
      Totals:         6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_setMotorPWM
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lwmod *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c"
 Parameters:    Size  Location     Type
  dividend        2   42[COMRAM] unsigned int 
  divisor         2   44[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  counter         1   46[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   42[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 Parameters:    Size  Location     Type
  dividend        2   35[COMRAM] unsigned int 
  divisor         2   37[COMRAM] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2   39[COMRAM] unsigned int 
  counter         1   41[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   35[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         4       0       0       0
      Locals:         3       0       0       0
      Temps:          0       0       0       0
      Totals:         7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function _grabRightIR *****************
 Defined at:
		line 74 in file "IR_Reading.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  IR_signal       2   40[COMRAM] unsigned int 
  i               1   42[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   35[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         3       0       0       0
      Temps:          3       0       0       0
      Totals:         8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_ScanIR
		_ScanWithRange
		_main
 This function uses a non-reentrant model


 *************** function _grabLeftIR *****************
 Defined at:
		line 90 in file "IR_Reading.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  IR_signal       2   40[COMRAM] unsigned int 
  i               1   42[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2   35[COMRAM] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         3       0       0       0
      Temps:          3       0       0       0
      Totals:         8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_ScanIR
		_ScanWithRange
		_main
 This function uses a non-reentrant model


 *************** function _SetLine *****************
 Defined at:
		line 74 in file "LCD.c"
 Parameters:    Size  Location     Type
  line            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  line            1   41[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_SendLCD
 This function is called by:
		_ScanIR
		_ScanWithRange
		_main
 This function uses a non-reentrant model


 *************** function _LCD_String *****************
 Defined at:
		line 83 in file "LCD.c"
 Parameters:    Size  Location     Type
  string          2   41[COMRAM] PTR unsigned char 
		 -> STR_9(11), STR_8(12), STR_7(10), main@buf(40), 
		 -> STR_5(17), ScanWithRange@buf(40), STR_3(12), ScanIR@buf(40), 
		 -> STR_1(12), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         2       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_SendLCD
 This function is called by:
		_ScanIR
		_ScanWithRange
		_main
 This function uses a non-reentrant model


 *************** function _SendLCD *****************
 Defined at:
		line 27 in file "LCD.c"
 Parameters:    Size  Location     Type
  Byte            1    wreg     unsigned char 
  type            1   39[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  Byte            1   40[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         1       0       0       0
      Locals:         1       0       0       0
      Temps:          0       0       0       0
      Totals:         2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_LCDout
 This function is called by:
		_initLCD
		_SetLine
		_LCD_String
		_ScanIR
		_ScanWithRange
		_main
 This function uses a non-reentrant model


 *************** function _LCDout *****************
 Defined at:
		line 14 in file "LCD.c"
 Parameters:    Size  Location     Type
  number          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  number          1   38[COMRAM] unsigned char 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         1       0       0       0
      Temps:          3       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_E_TOG
 This function is called by:
		_SendLCD
		_initLCD
 This function uses a non-reentrant model


 *************** function _E_TOG *****************
 Defined at:
		line 5 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:          0       0       0       0
      Totals:         0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		Nothing
 This function is called by:
		_LCDout
 This function uses a non-reentrant model


 *************** function _InterruptHandlerLow *****************
 Defined at:
		line 18 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:         17       0       0       0
      Totals:        17       0       0       0
Total ram usage:       17 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _InterruptHandlerHigh *****************
 Defined at:
		line 34 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         0       0       0       0
      Temps:         14       0       0       0
      Totals:        14       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i2_delay_tenth_s
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model


 *************** function i2_delay_tenth_s *****************
 Defined at:
		line 21 in file "Movement.c"
 Parameters:    Size  Location     Type
  tenth_second    1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  tenth_second    1    1[COMRAM] unsigned char 
  delay_tenth_    2    2[COMRAM] unsigned int 
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2
      Params:         0       0       0       0
      Locals:         3       0       0       0
      Temps:          1       0       0       0
      Totals:         4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_InterruptHandlerHigh
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c
		___awdiv       		CODE           	1404	0000	133

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c estimated size: 133

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c
		_isdigit       		CODE           	195A	0000	31

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\isdigit.c estimated size: 31

dc_motor.c
		_fullSpeedBack 		CODE           	1782	0000	63
		_fullSpeedAhead		CODE           	1488	0000	129
		_turnLeft      		CODE           	169C	0000	83
		_stop          		CODE           	12E6	0000	149
		_turnRight     		CODE           	164A	0000	83
		_initMotorPWM  		CODE           	1830	0000	51
		_setMotorPWM   		CODE           	0E7C	0000	315

dc_motor.c estimated size: 873

IR_Reading.c
		_grabLeftIR    		CODE           	157A	0000	115
		_grabRightIR   		CODE           	1508	0000	115
		_enableSensor  		CODE           	18EC	0000	39
		_initIR        		CODE           	1938	0000	35

IR_Reading.c estimated size: 304

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c
		___lwmod       		CODE           	1740	0000	67

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwmod.c estimated size: 67

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c
		_sprintf       		CODE           	0872	0000	775

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\doprnt.c estimated size: 775

shared
		_dpowers       		SMALLCONST     	0301	0000	11
		i2_delay_tenth_s		CODE           	17F8	0000	57
		__initialization		CODE           	18C2	0000	29

shared estimated size: 97

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c
		___lwdiv       		CODE           	16EE	0000	83

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c estimated size: 83

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c
		___wmul        		CODE           	1912	0000	39

C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c estimated size: 39

RFID_Reader.c
		_VerifySignal  		CODE           	1232	0000	181
		_initRFID      		CODE           	1978	0000	29

RFID_Reader.c estimated size: 210

main.c
		_main          		CODE           	035C	0000	1303
		_InterruptHandlerLow		CODE           	0018	0000	191
		_InterruptHandlerHigh		CODE           	0008	0000	153

main.c estimated size: 1647

Movement.c
		_ScanIR        		CODE           	0FB6	0000	251
		_delay_tenth_s 		CODE           	17C0	0000	57
		_ScanWithRange 		CODE           	0B78	0000	773

Movement.c estimated size: 1081

LCD.c
		_SetLine       		CODE           	1862	0000	49
		_LCD_String    		CODE           	15EC	0000	95
		_SendLCD       		CODE           	1892	0000	49
		_E_TOG         		CODE           	1994	0000	15
		_LCDout        		CODE           	10B0	0000	199
		_initLCD       		CODE           	1176	0000	189

LCD.c estimated size: 596

